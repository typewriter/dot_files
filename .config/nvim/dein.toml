# [[plugins]]
# repo = 'Shougo/deoplete.nvim'
# hook_add = '''
# let g:deoplete#enable_at_startup = 1
# let g:deoplete#auto_complete_delay = 150
# let g:deoplete#auto_complete_start_length = 1
# '''

[[plugins]]
repo = 'fatih/vim-go'

#[[plugins]]
#repo = 'pangloss/vim-javascript'

#[[plugins]]
#repo = 'mxw/vim-jsx'

[[plugins]]
repo = 'typewriter/zenrei.vim'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
nmap <silent> <C-t> :NERDTreeToggle<CR>
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
'''

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'posva/vim-vue'

# [[plugins]]
# repo = 'Shougo/neosnippet.vim'
# 
# [[plugins]]
# repo = 'Shougo/neosnippet-snippets'
#
[[plugins]]
repo = 'terryma/vim-expand-region'
hook_add = '''
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)
'''

[[plugins]]
repo = 'tpope/vim-rails'

[[plugins]]
repo = 'neoclide/coc.nvim'
build = 'coc#util#install()'
hook_add = '''
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gt <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
nmap <silent> rn <Plug>(coc-rename)
autocmd CursorHold * silent call CocActionAsync('highlight')
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
if = 'has("nvim")'
hook_source = '''
call denite#custom#map('insert', '<esc>', '<denite:enter_mode:normal>', 'noremap')
call denite#custom#map('normal', '<esc>', '<denite:quit>', 'noremap')
"call denite#custom#map('insert', '<C-j>', '<denite:move_to_next_line>', 'noremap')
"call denite#custom#map('insert', '<C-k>', '<denite:move_to_previous_line>', 'noremap')
"call denite#custom#map('normal', '<C-j>', '<denite:move_to_next_line>', 'noremap')
"call denite#custom#map('normal', '<C-k>', '<denite:move_to_previous_line>', 'noremap')
'''
hook_add = '''
nmap <silent> <C-f> :<C-u>Denite -auto-preview -split=vertical file/rec<CR>
nmap <silent> <C-g> :<C-u>Denite -auto-preview -split=vertical grep<CR>
xnoremap <silent> <C-f> :Denite -auto-preview -split=vertical file/rec:::`GetVisualWord()`<CR>
xnoremap <silent> <C-g> :Denite -auto-preview -split=vertical grep:::`GetVisualWord()`<CR>
'''

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_guide_size = 1
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd   ctermbg=22
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven  ctermbg=18
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
set updatetime=250
set signcolumn=yes
'''

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
let g:winresizer_vert_resize = 1
let g:winresizer_horiz_resize = 1
'''
# [[plugins]]
# repo = 'w0rp/ale'
# hook_add = '''
# let g:ale_set_highlights = 0
# let g:ale_sign_error = ' '
# let g:ale_sign_warning = ' '
# '''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'vim-airline/vim-airline'

hook_add = '''
let g:airline_theme = 'wombat'
set laststatus=2
let g:airline_powerline_fonts = 1
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#tabline#enabled = 0
let g:airline#extensions#wordcount#enabled = 0
let g:airline#extensions#default#layout = [['a', 'b', 'c'], ['x', 'y', 'z']]
let g:airline_section_c = '%F'
let g:airline_section_x = '%{&filetype}'
let g:airline_section_z = '%3l:%2v %{airline#extensions#ale#get_warning()} %{airline#extensions#ale#get_error()}'
let g:airline#extensions#ale#error_symbol = ' '
let g:airline#extensions#ale#warning_symbol = ' '
let g:airline#extensions#default#section_truncate_width = {}
let g:airline#extensions#whitespace#enabled = 1

let g:airline_section_error = '%{airline#util#wrap(airline#extensions#coc#get_error(),0)}'
let g:airline_section_warning = '%{airline#util#wrap(airline#extensions#coc#get_warning(),0)}'
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
nmap <F8> :TagbarToggle<CR>
autocmd VimEnter * nested :call tagbar#autoopen(1)
'''

